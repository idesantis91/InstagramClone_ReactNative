{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/idesantis/Documents/GitHub/InstagramClone_ReactNative/instagram-clone/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LandingScreen from \"./components/auth/Landing\";\nimport RegisterScreen from \"./components/auth/Register\";\nimport * as firebase from 'firebase';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC1vrZSxo-0MezkhPeiUsz0EGp2Bf-ZBXk\",\n  authDomain: \"instagramclone-660bc.firebaseapp.com\",\n  projectId: \"instagramclone-660bc\",\n  storageBucket: \"instagramclone-660bc.appspot.com\",\n  messagingSenderId: \"598062086860\",\n  appId: \"1:598062086860:web:f21e19db0dfb5137d1a069\",\n  measurementId: \"G-YZV4MDT75J\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar Stack = createStackNavigator();\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }\n        }, \"Loading...\"));\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 5\n          }\n        }, React.createElement(Stack.Navigator, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Landing\",\n          component: LandingScreen,\n          options: {\n            headerShown: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }\n        })));\n      }\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 8\n        }\n      }, \"User is logged in\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/idesantis/Documents/GitHub/InstagramClone_ReactNative/instagram-clone/App.js"],"names":["StatusBar","React","Component","NavigationContainer","createStackNavigator","LandingScreen","RegisterScreen","firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","Stack","App","props","state","loaded","auth","onAuthStateChanged","user","setState","loggedIn","flex","justifyContent","alignItems","headerShown"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {Component} from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n//Components\nimport LandingScreen from './components/auth/Landing';\nimport RegisterScreen from './components/auth/Register';\nimport * as firebase from 'firebase';\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n//If deployed as a real application it would be in an .env file\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC1vrZSxo-0MezkhPeiUsz0EGp2Bf-ZBXk\",\n  authDomain: \"instagramclone-660bc.firebaseapp.com\",\n  projectId: \"instagramclone-660bc\",\n  storageBucket: \"instagramclone-660bc.appspot.com\",\n  messagingSenderId: \"598062086860\",\n  appId: \"1:598062086860:web:f21e19db0dfb5137d1a069\",\n  measurementId: \"G-YZV4MDT75J\"\n};\n\nif(firebase.apps.length === 0){\n  firebase.initializeApp(firebaseConfig)\n}\n\nconst Stack = createStackNavigator();\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      loaded:false\n    }\n  }\n\n  componentDidMount(){\n    firebase.auth().onAuthStateChanged((user) =>{\n      if(!user){\n        this.setState({\n          loggedIn: false,\n          loaded: true,\n        })\n      } else{\n        this.setState({\n          loggedIn:true,\n          loaded: true,\n        })\n      }\n    })\n  }\n  render(){\n    const {loggedIn, loaded} = this.state;\n    if(!loaded){\n      return(\n        <View style={{flex:1, justifyContent:'center', alignItems:'center'}}>\n          <Text>Loading...</Text>\n        </View>\n      )\n    }\n  if(!loggedIn){\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name='Landing' component={LandingScreen} options={{headerShown:false}}/>\n        <Stack.Screen name='Register' component={RegisterScreen}/>\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n   }\n   return(\n     <View style={{flex:1, justifyContent:'center', alignItems:'center'}}>\n       <Text>User is logged in</Text>\n     </View>\n   )\n  }\n}\n \n\n"]},"metadata":{},"sourceType":"module"}